#!/bin/bash

# üß± Concrete Agent Installation Script
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã

set -e  # –í—ã—Ö–æ–¥ –ø—Ä–∏ –æ—à–∏–±–∫–µ

echo "üß± Concrete Agent - –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞"
echo "========================================"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Python..."
if ! command -v python3 &> /dev/null; then
    echo "‚ùå Python 3 –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python 3.9 –∏–ª–∏ –≤—ã—à–µ."
    exit 1
fi

PYTHON_VERSION=$(python3 -c 'import sys; print(".".join(map(str, sys.version_info[:2])))')
echo "‚úÖ –ù–∞–π–¥–µ–Ω Python $PYTHON_VERSION"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ pip
if ! command -v pip3 &> /dev/null; then
    echo "‚ùå pip3 –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º pip..."
    python3 -m ensurepip --upgrade
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
read -p "ü§î –°–æ–∑–¥–∞—Ç—å –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ? (y/n): " CREATE_VENV
if [[ $CREATE_VENV == "y" || $CREATE_VENV == "Y" ]]; then
    echo "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    python3 -m venv venv
    
    # –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if [[ "$OSTYPE" == "msys" || "$OSTYPE" == "cygwin" ]]; then
        # Windows
        source venv/Scripts/activate
        echo "‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ (Windows)"
    else
        # Linux/macOS
        source venv/bin/activate
        echo "‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ (Linux/macOS)"
    fi
fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo "üìö –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
pip3 install -r requirements.txt

# –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞
echo "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
if [ ! -f .env ]; then
    cp .env.template .env
    echo "üìù –°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª .env –∏–∑ —à–∞–±–ª–æ–Ω–∞"
    
    # –ó–∞–ø—Ä–æ—Å API –∫–ª—é—á–∞ Claude
    echo ""
    echo "üîë –î–ª—è –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º API –∫–ª—é—á Claude AI"
    echo "   –ü–æ–ª—É—á–∏—Ç—å –∫–ª—é—á –º–æ–∂–Ω–æ –Ω–∞: https://console.anthropic.com"
    read -p "   –í–≤–µ–¥–∏—Ç–µ API –∫–ª—é—á Claude (–∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞): " CLAUDE_KEY
    
    if [ ! -z "$CLAUDE_KEY" ]; then
        # –ó–∞–º–µ–Ω–∞ –≤ .env —Ñ–∞–π–ª–µ
        if [[ "$OSTYPE" == "darwin"* ]]; then
            # macOS
            sed -i '' "s/ANTHROPIC_API_KEY=your_anthropic_api_key_here/ANTHROPIC_API_KEY=$CLAUDE_KEY/" .env
        else
            # Linux
            sed -i "s/ANTHROPIC_API_KEY=your_anthropic_api_key_here/ANTHROPIC_API_KEY=$CLAUDE_KEY/" .env
        fi
        echo "‚úÖ API –∫–ª—é—á Claude –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
    else
        echo "‚ö†Ô∏è API –∫–ª—é—á Claude –Ω–µ —É–∫–∞–∑–∞–Ω. –°–∏—Å—Ç–µ–º–∞ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ."
        echo "   –í—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –∫–ª—é—á –ø–æ–∑–∂–µ –≤ —Ñ–∞–π–ª .env"
    fi
else
    echo "‚úÖ –§–∞–π–ª .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞–±–æ—á–∏—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
mkdir -p uploads logs outputs examples/sample_inputs

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
echo "üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏..."
if python3 -c "from app.main import app; print('‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è —É—Å–ø–µ—à–Ω–æ')" 2>/dev/null; then
    echo "‚úÖ –û—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—É–ª–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
else
    echo "‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–æ–¥—É–ª–µ–π"
    exit 1
fi

# –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
if [ -f "test_system.py" ]; then
    echo "üîß –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏..."
    python3 test_system.py
fi

echo ""
echo "üéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
echo ""
echo "üöÄ –î–ª—è –∑–∞–ø—É—Å–∫–∞ API —Å–µ—Ä–≤–µ—Ä–∞:"
echo "   uvicorn app.main:app --reload --port 8000"
echo ""
echo "üíª –î–ª—è –∞–Ω–∞–ª–∏–∑–∞ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥–Ω—É—é —Å—Ç—Ä–æ–∫—É:"
echo "   python analyze_concrete_complete.py --docs your_document.pdf"
echo ""
echo "üìö –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:"
echo "   - –ü–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ: USER_MANUAL.md"
echo "   - –ö—Ä–∞—Ç–∫–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ: README_RU.md"
echo "   - –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è: python examples/usage_examples.py"
echo ""
echo "üåê –ü–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ API:"
echo "   - –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API: http://localhost:8000/docs"
echo "   - –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è: http://localhost:8000/health"

# –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞
read -p "ü§î –ó–∞–ø—É—Å—Ç–∏—Ç—å API —Å–µ—Ä–≤–µ—Ä —Å–µ–π—á–∞—Å? (y/n): " START_SERVER
if [[ $START_SERVER == "y" || $START_SERVER == "Y" ]]; then
    echo "üöÄ –ó–∞–ø—É—Å–∫ API —Å–µ—Ä–≤–µ—Ä–∞..."
    echo "   –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C"
    echo "   API –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞: http://localhost:8000"
    echo ""
    uvicorn app.main:app --reload --port 8000
fi