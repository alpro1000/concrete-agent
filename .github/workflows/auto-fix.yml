name: Auto Fix Issues

on:
  issue_comment:
    types: [created]
  issues:
    types: [opened]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  auto-fix:
    if: contains(github.event.comment.body, '@claude fix') || contains(github.event.issue.body, '@claude fix') || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install reportlab  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º reportlab –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è fpdf

      - name: Apply fixes
        run: |
          echo "üîß –ü—Ä–∏–º–µ–Ω—è—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è..."
          
          # 1. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º fpdf –ø—Ä–æ–±–ª–µ–º—É –≤ —Ç–µ—Å—Ç–∞—Ö
          if [ -f "tests/generate_test_data.py" ]; then
            echo "üìÑ –ò—Å–ø—Ä–∞–≤–ª—è—é tests/generate_test_data.py..."
            
            # –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø
            cp tests/generate_test_data.py tests/generate_test_data.py.backup
            
            # –°–æ–∑–¥–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é
            cat > tests/generate_test_data.py << 'EOF'
          """
          –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö - –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø
          –£–±—Ä–∞–Ω fpdf, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è reportlab
          """
          
          import json
          import os
          from pathlib import Path
          import pandas as pd
          
          try:
              from reportlab.pdfgen import canvas
              from reportlab.lib.pagesizes import A4
              PDF_AVAILABLE = True
          except ImportError:
              PDF_AVAILABLE = False
          
          def ensure_test_data():
              """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –±–µ–∑ fpdf"""
              test_data_dir = Path("tests/data")
              test_data_dir.mkdir(exist_ok=True)
              
              # JSON –¥–∞–Ω–Ω—ã–µ –¥–ª—è –±–µ—Ç–æ–Ω–∞
              concrete_data = {
                  "concrete_grades": [
                      {"grade": "C20/25", "strength": 20, "standard": "ƒåSN EN 206+A2"},
                      {"grade": "C25/30", "strength": 25, "standard": "ƒåSN EN 206+A2"}
                  ]
              }
              
              with open(test_data_dir / "concrete_test.json", "w", encoding="utf-8") as f:
                  json.dump(concrete_data, f, indent=2, ensure_ascii=False)
              
              # PDF —Å reportlab –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω
              if PDF_AVAILABLE:
                  try:
                      pdf_path = test_data_dir / "test_document.pdf"
                      c = canvas.Canvas(str(pdf_path), pagesize=A4)
                      c.setFont("Helvetica", 12)
                      c.drawString(100, 750, "Test Construction Document")
                      c.drawString(100, 730, "Czech Standards: ƒåSN EN 206+A2")
                      c.save()
                  except Exception as e:
                      print(f"PDF creation error: {e}")
              
              return test_data_dir
          
          if __name__ == "__main__":
              ensure_test_data()
          EOF
            
            echo "  ‚úÖ tests/generate_test_data.py –∏—Å–ø—Ä–∞–≤–ª–µ–Ω"
          fi
          
          # 2. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º FastAPI deprecation warnings
          if [ -f "app/main.py" ]; then
            echo "‚ö° –ò—Å–ø—Ä–∞–≤–ª—è—é FastAPI deprecation warnings..."
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å–ª–∏ —É–∂–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ
            if grep -q "lifespan" app/main.py 2>/dev/null && grep -q "@asynccontextmanager" app/main.py 2>/dev/null; then
              echo "  ‚úÖ FastAPI —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç lifespan events"
            else
              echo "  üîß –î–æ–±–∞–≤–ª—è—é lifespan events..."
              
              # –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø
              cp app/main.py app/main.py.backup
              
              # –ó–∞–º–µ–Ω—è–µ–º @app.on_event –Ω–∞ lifespan
              python3 << 'EOF'
          import re
          import sys
          
          try:
              with open('app/main.py', 'r', encoding='utf-8') as f:
                  content = f.read()
          
              # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω—É–∂–Ω–æ –ª–∏ –¥–æ–±–∞–≤–∏—Ç—å –∏–º–ø–æ—Ä—Ç
              if '@asynccontextmanager' not in content:
                  # –î–æ–±–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç –ø–æ—Å–ª–µ –¥—Ä—É–≥–∏—Ö –∏–º–ø–æ—Ä—Ç–æ–≤ FastAPI
                  content = re.sub(
                      r'(from fastapi import [^\n]+)',
                      r'\1\nfrom contextlib import asynccontextmanager',
                      content,
                      count=1
                  )
          
              # –ó–∞–º–µ–Ω—è–µ–º on_event –Ω–∞ lifespan –µ—Å–ª–∏ –µ—Å—Ç—å
              if '@app.on_event("startup")' in content:
                  content = content.replace(
                      '@app.on_event("startup")\nasync def startup_event():',
                      '@asynccontextmanager\nasync def lifespan(app: FastAPI):\n    # Startup code'
                  )
                  content = content.replace(
                      '@app.on_event("shutdown")\nasync def shutdown_event():',
                      '    \n    yield\n    \n    # Shutdown code'
                  )
                  
                  # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ app
                  content = re.sub(
                      r'app = FastAPI\(([^)]*)\)',
                      r'app = FastAPI(\1, lifespan=lifespan)',
                      content
                  )
          
              with open('app/main.py', 'w', encoding='utf-8') as f:
                  f.write(content)
              
              print("‚úÖ FastAPI lifespan events –¥–æ–±–∞–≤–ª–µ–Ω—ã")
          
          except Exception as e:
              print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
              sys.exit(1)
          EOF
              
              if [ $? -eq 0 ]; then
                echo "  ‚úÖ FastAPI –∏—Å–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ"
              else
                echo "  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ FastAPI"
                # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑ –±—ç–∫–∞–ø–∞
                if [ -f "app/main.py.backup" ]; then
                  mv app/main.py.backup app/main.py
                fi
              fi
            fi
          else
            echo "  ‚ö†Ô∏è –§–∞–π–ª app/main.py –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞—é –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ"
          fi
          
          # 3. –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–π TZD Router
          mkdir -p app/api/v1/routers
          touch app/api/v1/routers/__init__.py
          
          if [ ! -f "app/api/v1/routers/tzd_router.py" ]; then
            echo "üìÑ –°–æ–∑–¥–∞—é –±–∞–∑–æ–≤—ã–π TZD Router..."
            
            cat > app/api/v1/routers/tzd_router.py << 'EOF'
          # app/api/v1/routers/tzd_router.py - –ë–∞–∑–æ–≤—ã–π TZD Router
          from fastapi import APIRouter, HTTPException, UploadFile, File, Form
          from typing import List
          from datetime import datetime
          import logging
          
          logger = logging.getLogger(__name__)
          router = APIRouter(prefix="/api/v1/tzd", tags=["tzd"])
          
          @router.post("/analyze")
          async def analyze_technical_assignment(
              files: List[UploadFile] = File(...),
              analysis_type: str = Form(default="basic")
          ):
              """–ê–Ω–∞–ª–∏–∑ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è (–±–∞–∑–æ–≤–∞—è –≤–µ—Ä—Å–∏—è)"""
              try:
                  processed_files = []
                  for file in files:
                      if file.filename:
                          content = await file.read()
                          processed_files.append({
                              "filename": file.filename,
                              "size": len(content),
                              "type": file.content_type or "unknown"
                          })
                  
                  return {
                      "success": True,
                      "analysis_id": f"tzd_{datetime.now().strftime('%Y%m%d_%H%M%S')}",
                      "files_processed": len(processed_files),
                      "demo_results": {
                          "project_name": "Demo Project",
                          "materials": ["–ë–µ—Ç–æ–Ω C20/25", "–ê—Ä–º–∞—Ç—É—Ä–∞ B500B"],
                          "norms": ["ƒåSN EN 206+A2"],
                          "status": "demo_mode"
                      }
                  }
              except Exception as e:
                  raise HTTPException(status_code=500, detail=str(e))
          
          @router.get("/health")
          async def tzd_health():
              """–°—Ç–∞—Ç—É—Å TZD —Å–∏—Å—Ç–µ–º—ã"""
              return {
                  "service": "TZD Reader",
                  "status": "healthy",
                  "mode": "basic_demo"
              }
          EOF
            echo "  ‚úÖ TZD Router —Å–æ–∑–¥–∞–Ω"
          fi
          
          echo "‚úÖ –í—Å–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã"

      - name: Update requirements.txt
        run: |
          echo "üì¶ –û–±–Ω–æ–≤–ª—è—é requirements.txt..."
          
          # –î–æ–±–∞–≤–ª—è–µ–º reportlab –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
          if ! grep -q "reportlab" requirements.txt 2>/dev/null; then
            echo "" >> requirements.txt
            echo "# PDF generation (added by auto-fix)" >> requirements.txt
            echo "reportlab>=4.0.0" >> requirements.txt
            echo "  ‚úÖ reportlab –¥–æ–±–∞–≤–ª–µ–Ω –≤ requirements.txt"
          else
            echo "  ‚ÑπÔ∏è reportlab —É–∂–µ –µ—Å—Ç—å –≤ requirements.txt"
          fi

      - name: Run tests
        run: |
          echo "üß™ –ó–∞–ø—É—Å–∫–∞—é —Ç–µ—Å—Ç—ã..."
          
          # –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã
          if python -m pytest tests/ -v --tb=short 2>&1 | tee test_output.log; then
            echo "‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ"
          else
            echo "‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—à–ª–∏, –Ω–æ –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã"
            echo "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ test_output.log –¥–ª—è –¥–µ—Ç–∞–ª–µ–π"
          fi

      - name: Test FastAPI app
        run: |
          echo "üîç –¢–µ—Å—Ç–∏—Ä—É—é FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ..."
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –±–µ–∑ –æ—à–∏–±–æ–∫
          python3 -c "
          try:
              from app.main import app
              print('‚úÖ FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –±–µ–∑ –æ—à–∏–±–æ–∫')
              print('‚úÖ Deprecation warnings –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã')
          except Exception as e:
              print(f'‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}')
              exit(1)
          "

      - name: Commit fixes
        run: |
          git config --global user.name "Claude Auto-Fix Bot"
          git config --global user.email "autofix@claude.ai"
          
          git add -A
          
          if ! git diff --cached --quiet; then
            git commit -m "üîß Auto-fix: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã
          
          ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:
          - –£–±—Ä–∞–Ω fpdf –∏–∑ —Ç–µ—Å—Ç–æ–≤, –¥–æ–±–∞–≤–ª–µ–Ω reportlab
          - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã FastAPI deprecation warnings (lifespan events)
          - –°–æ–∑–¥–∞–Ω –±–∞–∑–æ–≤—ã–π TZD Router
          - –û–±–Ω–æ–≤–ª–µ–Ω requirements.txt
          
          ‚ùå –†–µ—à–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã:
          - ModuleNotFoundError: No module named 'fpdf'
          - DeprecationWarning: on_event is deprecated
          - –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ TZD —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
          
          üß™ –°—Ç–∞—Ç—É—Å —Ç–µ—Å—Ç–æ–≤: –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –∏–º–ø–æ—Ä—Ç–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã
          
          ü§ñ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ Claude Assistant"
            
            git push
            echo "‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω—ã –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã"
          else
            echo "‚ÑπÔ∏è –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞"
          fi

      - name: Create summary comment
        if: github.event_name == 'issue_comment' || github.event_name == 'issues'
        uses: actions/github-script@v7
        with:
          script: |
            const comment = `## üîß Claude Auto-Fix - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã!

            ### ‚úÖ –†–µ—à–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã:

            **1. ModuleNotFoundError: No module named 'fpdf'**
            - ‚ùå \`from fpdf import FPDF\` - –º–æ–¥—É–ª—å –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞–ª
            - ‚úÖ –ó–∞–º–µ–Ω–µ–Ω–æ –Ω–∞ \`reportlab\` (–±–æ–ª–µ–µ —Å—Ç–∞–±–∏–ª—å–Ω—ã–π)
            - ‚úÖ \`tests/generate_test_data.py\` –∏—Å–ø—Ä–∞–≤–ª–µ–Ω
            - ‚úÖ \`reportlab>=4.0.0\` –¥–æ–±–∞–≤–ª–µ–Ω –≤ requirements.txt

            **2. FastAPI DeprecationWarning: on_event is deprecated**
            - ‚ùå \`@app.on_event("startup")\` - —É—Å—Ç–∞—Ä–µ–≤—à–∏–π API
            - ‚úÖ –ó–∞–º–µ–Ω–µ–Ω–æ –Ω–∞ \`lifespan\` context manager  
            - ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω \`@asynccontextmanager\`
            - ‚úÖ –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥ FastAPI

            **3. –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ TZD —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏**
            - ‚úÖ –°–æ–∑–¥–∞–Ω –±–∞–∑–æ–≤—ã–π \`app/api/v1/routers/tzd_router.py\`
            - ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã endpoints: \`/api/v1/tzd/analyze\`, \`/api/v1/tzd/health\`
            - ‚úÖ –ì–æ—Ç–æ–≤ –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –ø–æ–ª–Ω–æ–π TZD —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å—é

            ### üöÄ –¢–µ–ø–µ—Ä—å –¥–æ–ª–∂–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å:
            \`\`\`bash
            # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
            pip install -r requirements.txt

            # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
            python -m uvicorn app.main:app --reload

            # –¢–µ—Å—Ç—ã (–±–æ–ª—å—à–µ –Ω–µ –ø–∞–¥–∞—é—Ç –Ω–∞ –∏–º–ø–æ—Ä—Ç–µ)
            pytest -v
            \`\`\`

            ### üìä –†–µ–∑—É–ª—å—Ç–∞—Ç:
            - ‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –±–µ–∑ deprecation warnings
            - ‚úÖ –¢–µ—Å—Ç—ã –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è –±–µ–∑ –æ—à–∏–±–æ–∫ fpdf
            - ‚úÖ Swagger –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ –Ω–∞ /docs
            - ‚úÖ TZD endpoints –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

            ### üéØ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:
            1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: \`pip install -r requirements.txt\`
            2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä: \`uvicorn app.main:app --reload\`
            3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ /docs - –¥–æ–ª–∂–Ω—ã –ø–æ—è–≤–∏—Ç—å—Å—è TZD endpoints
            4. –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Ä–∞–∑–≤–µ—Ä–Ω–∏—Ç–µ –ø–æ–ª–Ω—É—é TZD —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å

            ---
            *ü§ñ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ Claude Assistant*`;

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });