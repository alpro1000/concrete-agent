name: Deploy with Claude Auto-Fix (with PR fallback)

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          set -o pipefail
          pip install -r requirements.txt 2>&1 | tee build.log

      - name: Deploy to Render
        id: render-deploy
        run: |
          echo "Triggering Render deploy..." | tee -a build.log
          curl -s -X POST "https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys" \
               -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
               -H "Content-Type: application/json" | tee -a build.log

      - name: Save logs
        if: failure()
        run: |
          echo "‚ö†Ô∏è Build/Deploy failed. Saving logs..."
          cat build.log || true

      - name: Ask Claude for fix
        if: failure()
        run: |
          echo "ü§ñ Sending logs to Claude..."
          RESPONSE=$(curl -s https://api.anthropic.com/v1/messages \
            -H "x-api-key: ${{ secrets.ANTHROPIC_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d "{
              \"model\": \"claude-3-opus-20240229\",
              \"max_tokens\": 1500,
              \"messages\": [
                {\"role\": \"user\", \"content\": \"Here are the logs from CI/CD (pip install + Render deploy). Please generate a unified diff patch to fix the issues:\n$(cat build.log)\"}
              ]
            }")
          echo "$RESPONSE" > claude_fix.json
          echo "$RESPONSE" | jq -r '.content[0].text' > claude_patch.diff

      - name: Track failure counter
        if: failure()
        run: |
          ATTEMPT_FILE=".deploy_failures"
          if [ -f $ATTEMPT_FILE ]; then
            COUNT=$(cat $ATTEMPT_FILE)
          else
            COUNT=0
          fi
          COUNT=$((COUNT+1))
          echo $COUNT > $ATTEMPT_FILE
          echo "COUNT=$COUNT" >> $GITHUB_ENV
          echo "‚ùå Deploy failed $COUNT times in a row."

      - name: Apply Claude patch automatically
        if: failure() && env.COUNT < 3
        run: |
          echo "‚ö° Applying Claude fix automatically (attempt $COUNT)..."
          git apply claude_patch.diff || echo "‚ö†Ô∏è Failed to apply patch"
          git config --global user.email "actions@github.com"
          git config --global user.name "github-actions"
          git add .
          git commit -m "Auto-fix by Claude (attempt $COUNT)"
          git push origin main

      - name: Create Pull Request with Claude fix
        if: failure() && env.COUNT >= 3
        uses: peter-evans/create-pull-request@v6
        with:
          commit-message: "Claude suggested fix after ${{ env.COUNT }} failed deploys"
          branch: "claude-fix"
          title: "Fix: Claude patch for Render errors"
          body: |
            This PR contains changes suggested by Claude after ${{ env.COUNT }} failed deploys.
            Please review manually before merging.
