name: Claude Debug

on:
  issue_comment:
    types: [created]

jobs:
  debug-test:
    if: contains(github.event.comment.body, '@claude-debug')
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install your dependencies
        run: |
          python -m pip install --upgrade pip
          echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –≤–∞—à–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
          pip install -r requirements.txt
          echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

      - name: Test imports
        run: |
          echo "üîç –¢–µ—Å—Ç–∏—Ä—É—é –∏–º–ø–æ—Ä—Ç—ã..."
          python -c "
          # Test key imports from your requirements.txt
          try:
              import fastapi
              print('‚úÖ FastAPI:', fastapi.__version__)
          except Exception as e:
              print('‚ùå FastAPI:', e)
              
          try:
              import pandas as pd
              print('‚úÖ Pandas:', pd.__version__)
          except Exception as e:
              print('‚ùå Pandas:', e)
              
          try:
              import numpy as np
              print('‚úÖ NumPy:', np.__version__)
          except Exception as e:
              print('‚ùå NumPy:', e)
              
          try:
              import anthropic
              print('‚úÖ Anthropic:', anthropic.__version__)
          except Exception as e:
              print('‚ùå Anthropic:', e)
              
          try:
              import openpyxl
              print('‚úÖ OpenPyXL:', openpyxl.__version__)
          except Exception as e:
              print('‚ùå OpenPyXL:', e)
              
          try:
              import PyPDF2
              print('‚úÖ PyPDF2:', PyPDF2.__version__)
          except Exception as e:
              print('‚ùå PyPDF2:', e)
          "

      - name: Test project structure
        run: |
          echo "üìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞:"
          find . -maxdepth 2 -type f -name "*.py" | head -10
          echo ""
          echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:"
          echo "Python —Ñ–∞–π–ª–æ–≤: $(find . -name '*.py' | wc -l)"
          echo "–ü–∞–ø–æ–∫: $(find . -maxdepth 1 -type d | wc -l)"

      - name: Simple test run
        run: |
          echo "üß™ –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ—Å—Ç–æ–≤..."
          if [ -d "tests" ]; then
            echo "–ù–∞–π–¥–µ–Ω–∞ –ø–∞–ø–∫–∞ tests, –ø–æ–ø—Ä–æ–±—É–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç—å:"
            # Just syntax check, don't actually run tests
            find tests -name "*.py" -exec python -m py_compile {} \; || echo "–ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –≤ —Ç–µ—Å—Ç–∞—Ö"
            echo "‚úÖ –°–∏–Ω—Ç–∞–∫—Å–∏—Å —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–≤–µ—Ä–µ–Ω"
          else
            echo "‚ÑπÔ∏è –ü–∞–ø–∫–∞ tests –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
          fi

      - name: Check for missing test dependencies
        run: |
          echo "üîç –ò—â–µ–º –ø—Ä–æ–±–ª–µ–º—ã —Å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—è–º–∏ —Ç–µ—Å—Ç–æ–≤..."
          python -c "
          from pathlib import Path
          import re
          
          if Path('tests/generate_test_data.py').exists():
              print('üìÑ –ù–∞–π–¥–µ–Ω tests/generate_test_data.py')
              with open('tests/generate_test_data.py', 'r') as f:
                  content = f.read()
              
              # Find imports
              imports = re.findall(r'from (\w+) import|import (\w+)', content)
              for imp in imports:
                  module = imp[0] or imp[1]
                  if module:
                      try:
                          __import__(module)
                          print(f'  ‚úÖ {module}')
                      except ImportError:
                          print(f'  ‚ùå {module} - –ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù!')
                          if module == 'fpdf':
                              print('    üí° –†–µ—à–µ–Ω–∏–µ: –∑–∞–º–µ–Ω–∏—Ç–µ fpdf –Ω–∞ –¥—Ä—É–≥—É—é –±–∏–±–ª–∏–æ—Ç–µ–∫—É –∏–ª–∏ —É–¥–∞–ª–∏—Ç–µ')
          else:
              print('‚ÑπÔ∏è generate_test_data.py –Ω–µ –Ω–∞–π–¥–µ–Ω')
          "

      - name: Comment result
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## üêõ Claude Debug Results
              
              –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!
              
              ‚úÖ –í–∞—à–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏–∑ requirements.txt —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
              üì¶ –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω—ã –∫–ª—é—á–µ–≤—ã–µ –∏–º–ø–æ—Ä—Ç—ã  
              üìÅ –ü—Ä–æ–≤–µ—Ä–µ–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞
              üß™ –ü—Ä–æ–≤–µ—Ä–µ–Ω —Å–∏–Ω—Ç–∞–∫—Å–∏—Å —Ç–µ—Å—Ç–æ–≤
              
              –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π.
              
              ### –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã:
              1. –ü—Ä–æ–±–ª–µ–º–∞ —Å \`fpdf\` –≤ —Ç–µ—Å—Ç–∞—Ö - –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ \`PyPDF2\` –∏–ª–∏ \`pdfplumber\`
              2. FastAPI deprecation warnings - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ lifespan events
              3. –ü—Ä–æ–±–ª–µ–º—ã —Å —Ç–µ—Å—Ç–∞–º–∏ - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—Å–µ –∏–º–ø–æ—Ä—Ç—ã –≤ test —Ñ–∞–π–ª–∞—Ö
              
              ---
              *–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ \`@claude\` –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞*`
            });
