name: Setup KB Folders

# Запускается ТОЛЬКО вручную через веб-интерфейс
on:
  workflow_dispatch:

jobs:
  setup-folders:
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: 🗂️ Create missing folders and metadata
        run: |
          echo "🚀 Creating Knowledge Base structure..."
          echo ""
          
          KB_DIR="app/knowledge_base"
          
          # Список всех категорий
          categories=(
            "B1_kros_urs_codes"
            "B2_csn_standards"
            "B3_current_prices"
            "B4_production_benchmarks"
            "B5_tech_cards"
            "B6_research_papers"
            "B7_regulations"
            "B8_company_specific"
          )
          
          # Описания категорий
          declare -A descriptions=(
            ["B1_kros_urs_codes"]="KROS 4, ÚRS, RTS codes database"
            ["B2_csn_standards"]="ČSN standards and regulations"
            ["B3_current_prices"]="Current market prices"
            ["B4_production_benchmarks"]="Productivity benchmarks and historical projects"
            ["B5_tech_cards"]="Technical cards and procedures"
            ["B6_research_papers"]="Research papers and diploma theses"
            ["B7_regulations"]="Laws and building regulations"
            ["B8_company_specific"]="Company-specific rules and templates"
          )
          
          for category in "${categories[@]}"; do
            category_path="$KB_DIR/$category"
            
            # Создаем папку если не существует
            if [ ! -d "$category_path" ]; then
              mkdir -p "$category_path"
              echo "📁 Created folder: $category"
            else
              echo "✅ Folder exists: $category"
            fi
            
            # Создаем metadata.json если не существует
            if [ ! -f "$category_path/metadata.json" ]; then
              cat > "$category_path/metadata.json" << EOF
          {
            "category": "$category",
            "last_updated": "$(date +%Y-%m-%d)",
            "version": "1.0",
            "source": "Initial setup",
            "description": "${descriptions[$category]}",
            "files": [],
            "notes": "Category initialized. Ready for data."
          }
          EOF
              echo "   ✅ Created metadata.json"
            else
              echo "   ℹ️  metadata.json already exists"
            fi
            
            # Создаем .gitkeep для пустых папок
            if [ ! -f "$category_path/.gitkeep" ]; then
              touch "$category_path/.gitkeep"
              echo "   ✅ Created .gitkeep"
            fi
            
            echo ""
          done
          
          echo "════════════════════════════════════════════════"
          echo "✨ Knowledge Base structure created!"
          echo "════════════════════════════════════════════════"
          echo ""
          echo "📊 Summary:"
          for category in "${categories[@]}"; do
            if [ -d "$KB_DIR/$category" ]; then
              file_count=$(find "$KB_DIR/$category" -type f \
                ! -name "metadata.json" \
                ! -name ".gitkeep" 2>/dev/null | wc -l)
              echo "  ✅ $category ($file_count files)"
            fi
          done
      
      - name: 💾 Commit and push changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          # Проверяем есть ли изменения
          if [ -n "$(git status --porcelain)" ]; then
            git add app/knowledge_base/
            git commit -m "🗂️ Initialize Knowledge Base structure

          - Created all B1-B8 category folders
          - Added metadata.json to each category
          - Added .gitkeep for Git tracking
          
          Auto-generated by GitHub Actions"
            
            git push
            
            echo ""
            echo "✅ Changes committed and pushed successfully!"
          else
            echo ""
            echo "ℹ️  No changes to commit - structure already exists"
          fi
      
      - name: 📋 Create summary
        run: |
          echo "## 📂 Knowledge Base Setup Complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ All category folders have been created with initial metadata.json" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📊 Structure:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Category | Description | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|----------|-------------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| B1_kros_urs_codes | KROS 4, ÚRS, RTS codes | ✅ Ready |" >> $GITHUB_STEP_SUMMARY
          echo "| B2_csn_standards | ČSN standards | ✅ Ready |" >> $GITHUB_STEP_SUMMARY
          echo "| B3_current_prices | Market prices | ✅ Ready |" >> $GITHUB_STEP_SUMMARY
          echo "| B4_production_benchmarks | Benchmarks | ✅ Ready |" >> $GITHUB_STEP_SUMMARY
          echo "| B5_tech_cards | Technical cards | ✅ Ready |" >> $GITHUB_STEP_SUMMARY
          echo "| B6_research_papers | Research | ✅ Ready |" >> $GITHUB_STEP_SUMMARY
          echo "| B7_regulations | Regulations | ✅ Ready |" >> $GITHUB_STEP_SUMMARY
          echo "| B8_company_specific | Company rules | ✅ Ready |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🚀 Next steps:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "1. Start adding files to each category" >> $GITHUB_STEP_SUMMARY
          echo "2. Files will be automatically tracked" >> $GITHUB_STEP_SUMMARY
          echo "3. metadata.json will auto-update (if you setup the update workflow)" >> $GITHUB_STEP_SUMMARY
