"""Initial database schema

Revision ID: dfd64b9dc583
Revises: 
Create Date: 2025-09-28 08:05:06.185362

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'dfd64b9dc583'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('projects',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('project_metadata', sa.JSON(), nullable=False),  # Use JSON for SQLite compatibility
    sa.Column('id', sa.String(length=36), nullable=False),  # Use String for UUID in SQLite
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_projects_id'), 'projects', ['id'], unique=False)
    op.create_index(op.f('ix_projects_name'), 'projects', ['name'], unique=False)
    op.create_table('folders',
    sa.Column('project_id', sa.String(length=36), nullable=False),  # Use String for UUID in SQLite
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('path', sa.String(length=500), nullable=False),
    sa.Column('id', sa.String(length=36), nullable=False),  # Use String for UUID in SQLite
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_folders_id'), 'folders', ['id'], unique=False)
    op.create_index(op.f('ix_folders_project_id'), 'folders', ['project_id'], unique=False)
    op.create_table('documents',
    sa.Column('folder_id', sa.String(length=36), nullable=False),  # Use String for UUID in SQLite
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('file_hash', sa.String(length=64), nullable=False),
    sa.Column('file_type', sa.Enum('PDF', 'DOCX', 'XLSX', 'XML', 'TXT', 'DWG', 'OTHER', name='filetype'), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('size', sa.Integer(), nullable=False),
    sa.Column('uploaded_at', sa.DateTime(), nullable=False),
    sa.Column('status', sa.Enum('NEW', 'PROCESSED', 'FAILED', name='documentstatus'), nullable=False),
    sa.Column('id', sa.String(length=36), nullable=False),  # Use String for UUID in SQLite
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['folder_id'], ['folders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_documents_file_hash'), 'documents', ['file_hash'], unique=False)
    op.create_index(op.f('ix_documents_folder_id'), 'documents', ['folder_id'], unique=False)
    op.create_index(op.f('ix_documents_id'), 'documents', ['id'], unique=False)
    op.create_table('extractions',
    sa.Column('document_id', sa.String(length=36), nullable=False),  # Use String for UUID in SQLite
    sa.Column('agent', sa.String(length=100), nullable=False),
    sa.Column('data', sa.JSON(), nullable=False),  # Use JSON for SQLite compatibility
    sa.Column('confidence', sa.Float(), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False),  # Use String for UUID in SQLite
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_extractions_agent'), 'extractions', ['agent'], unique=False)
    op.create_index(op.f('ix_extractions_document_id'), 'extractions', ['document_id'], unique=False)
    op.create_index(op.f('ix_extractions_id'), 'extractions', ['id'], unique=False)
    op.create_table('corrections',
    sa.Column('extraction_id', sa.String(length=36), nullable=False),  # Use String for UUID in SQLite
    sa.Column('user_feedback', sa.Text(), nullable=True),
    sa.Column('corrected_data', sa.JSON(), nullable=False),  # Use JSON for SQLite compatibility
    sa.Column('id', sa.String(length=36), nullable=False),  # Use String for UUID in SQLite
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['extraction_id'], ['extractions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_corrections_extraction_id'), 'corrections', ['extraction_id'], unique=False)
    op.create_index(op.f('ix_corrections_id'), 'corrections', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_corrections_id'), table_name='corrections')
    op.drop_index(op.f('ix_corrections_extraction_id'), table_name='corrections')
    op.drop_table('corrections')
    op.drop_index(op.f('ix_extractions_id'), table_name='extractions')
    op.drop_index(op.f('ix_extractions_document_id'), table_name='extractions')
    op.drop_index(op.f('ix_extractions_agent'), table_name='extractions')
    op.drop_table('extractions')
    op.drop_index(op.f('ix_documents_id'), table_name='documents')
    op.drop_index(op.f('ix_documents_folder_id'), table_name='documents')
    op.drop_index(op.f('ix_documents_file_hash'), table_name='documents')
    op.drop_table('documents')
    op.drop_index(op.f('ix_folders_project_id'), table_name='folders')
    op.drop_index(op.f('ix_folders_id'), table_name='folders')
    op.drop_table('folders')
    op.drop_index(op.f('ix_projects_name'), table_name='projects')
    op.drop_index(op.f('ix_projects_id'), table_name='projects')
    op.drop_table('projects')
    # ### end Alembic commands ###
